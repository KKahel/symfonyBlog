<?php

namespace Sdz\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function getAvecCategories(array $listeCategories)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->join('a.categories','c')
            ->where($qb->expr()->in('c.nom',$listeCategories));

        return $qb->getQuery()->getResult();
    }

    public function findArticleAvecCommentaireEtCompetenceById($id)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.id = '.$id)
            ->leftJoin('a.commentaires','comm')
            ->leftJoin('a.competenceArticles','compArt')
            ->leftJoin('compArt.competence','comp')
            ->leftJoin('a.image','img')
            ->leftJoin('a.categories','cat')
            ->addSelect('cat')
            ->addSelect('img')
            ->addSelect('comm')
            ->addSelect('compArt')
            ->addSelect('comp');

        return $qb->getQuery()
            ->getSingleResult();
    }

    public function findArticleAvecCommentaireEtCompetenceBySlug($slug)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.slug = :slug')
            ->setParameter('slug',$slug)
            ->leftJoin('a.commentaires','comm')
            ->leftJoin('a.competenceArticles','compArt')
            ->leftJoin('compArt.competence','comp')
            ->leftJoin('a.image','img')
            ->leftJoin('a.categories','cat')
            ->addSelect('cat')
            ->addSelect('img')
            ->addSelect('comm')
            ->addSelect('compArt')
            ->addSelect('comp');

        return $qb->getQuery()
            ->getSingleResult();
    }

    public function getArticles($nombreParPage, $page)
    {
        if($page < 1)
        {
            throw new \InvalidArgumentException('L\'argument $page ne peut �tre inf�rieur � 1 (valeur : "'.$page.'").');
        }

        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.commentaires','comm')
            ->leftJoin('a.competenceArticles','compArt')
            ->leftJoin('compArt.competence','comp')
            ->leftJoin('a.image','img')
            ->leftJoin('a.categories','cat')
            ->addSelect('cat')
            ->addSelect('img')
            ->addSelect('comm')
            ->addSelect('compArt')
            ->addSelect('comp')
            ->orderBy('a.date', 'DESC');

        // On d�finit l'article � partir duquel commencer la liste
        $query->setFirstResult(($page-1) * $nombreParPage)
            // Ainsi que le nombre d'articles � afficher
            ->setMaxResults($nombreParPage);
        return new Paginator($query);
    }
}
